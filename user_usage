#!/bin/bash

#######################################################################
#   Display the usage information for all users of an account         #
#   This includes the NetID, Name (if available), and the             #
#   total number of Running, Idle, SystemHold, and Blocked jobs.      #
#   They are listed in descending order.                              #
#   This script makes some temporary files (which are deleted) to the #
#   current home directory.                                           #
#   We also assume that the utilities module exists                   #
#                                                                     #
#   Arguments - Account Name                                          #
#                                                                     #
#   Author: Adam Dempsey                                              #
#                                                                     #
#######################################################################

ACCT=$1

module load utilities

printf "\nUsage for %s\n\n" "$ACCT"
printf "%10s\t%10s\t%5s\t%5s\n" "NetID"   "NAME"   "Running"   " Idle"
printf "%.0s-" {1..45}
printf "\n"

FILE1=$(mktemp /tmp/user_usage.XXXXXX)
FILE2=$(mktemp /tmp/user_usage.XXXXXX)
FILE3=$(mktemp /tmp/user_usage.XXXXXX)

showq  -w acct=$ACCT > $FILE1

grouplist $ACCT > $FILE2

RUNNING=( $(cat $FILE1 | grep -E 'Running|Idle' | awk '{print $2}' | sort | uniq) )
NETID=( $(cat $FILE2 | awk '{print $1}' | sed 's/:$//') )
NAMES=( $(cat $FILE2 | awk '{print $2}') )

TOTRUNNING=0
TOTIDLE=0

for i in ${RUNNING[@]}
do
    TOTR=$( cat $FILE1 | grep $i | grep Running | awk '{s+=$4} END {print s}')
    TOTI=$( cat $FILE1 | grep $i | grep Idle | awk '{s+=$4} END {print s}')
    
    if [[  -z "${TOTR// }" ]]; then
        TOTR=0
    fi
    if [[  -z "${TOTI// }" ]]; then
        TOTI=0
    fi


    TOTRUNNING=$(($TOTRUNNING+$TOTR))
    TOTIDLE=$(($TOTIDLE+$TOTI))
    FOUND=0
    for j in "${!NETID[@]}"; do
        if [[ "${NETID[$j]}" = "$i" ]]; then
            printf "%10s\t%10s\t%5s\t%5s\n" "$i" "${NAMES[$j]}" "$TOTR" "$TOTI" >>  $FILE3
            FOUND=1
        fi
    done
    if [[ $FOUND -eq 0  ]]; then
            printf "%10s\t%10s\t%5s\t%5s\n" "$i"  "N/A" "$TOTR" "$TOTI" >> $FILE3

    fi

done


cat $FILE3 | sort -k3 -n -r 
printf "%.0s-" {1..45}
printf "\n"
printf "%10s\t%10s\t%5s\t%5s\n" "Totals" " " "$TOTRUNNING" "$TOTIDLE"

rm -f $FILE1 $FILE2 $FILE3
